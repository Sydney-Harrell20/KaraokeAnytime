{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\KaraokeApp\\\\KaraokeAnytime\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(null);\nconst socket = io('http://localhost:5000');\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [stream, setStream] = useState(null);\n  const [me, setMe] = useState('');\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: false,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('calluser', _ref2 => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref2;\n      setCall({\n        isReceivedCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit(\"answercall\", {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit(\"calluser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"H0ULBEb3qnyBYDLhTXzUqsNopvY=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"sources":["C:/Users/Andrew/KaraokeApp/KaraokeAnytime/src/SocketContext.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext(null);\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({video: false, audio:true})\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n\r\n                myVideo.current.srcObject=currentStream;\r\n            });\r\n        socket.on('me', (id) => setMe(id));\r\n        socket.on('calluser', ( {from, name: callerName, signal}) => {\r\n            setCall({isReceivedCall: true, from, name: callerName, signal });\r\n        });\r\n    }, []);\r\n    const answerCall = () => {\r\n        setCallAccepted(true)\r\n\r\n        const peer = new Peer({initiator:false, trickle: false, stream});\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit(\"answercall\", {signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream});\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit(\"calluser\", {userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport { ContextProvider, SocketContext};"],"mappings":"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"},"metadata":{},"sourceType":"module"}